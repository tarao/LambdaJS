<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"
                      "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ja">
<head>
  <script type="text/javascript" src="./compatibility.js"></script>
  <script type="text/javascript" src="./ui.js"></script>
  <script type="text/javascript" src="./pp.js"></script>
  <script type="text/javascript" src="./lambda.js"></script>
  <script type="text/javascript" src="./app.js"></script>
  <script type="text/javascript;version=1.8" src="./lambda.js"></script>
  <script type="text/javascript;version=1.8" src="./app.js"></script>
  <link rel="stylesheet" type="text/css" href="./default.css" />
  <link rel="stylesheet" type="text/css" href="./lambda.css" />
  <link rel="start" href="http://orezdnu.org/" />
  <link rev="made" href="http://orezdnu.org/" />
  <title>Lambda calculus in JS syntax</title>
</head>
<body onload="init('console')">
  <div id="article">
    <h1>Lambda calculus in JavaScript syntax</h1>

    <div id="console" class="console"></div>

    <ul id="strategy" class="select">
      <li class="label">Evaluation strategy:</li>
    </ul>
    <div id="allow-eta-reduction">
      <label>
        <input type="checkbox" name="allow-eta" id="input-allow-eta" />
        allow &eta;-reduction
      </label>
    </div>

    <ul id="pp" class="select">
      <li class="label">Output:</li>
    </ul>

    <form action="." id="store"><div>
    <input type="text" name="strategy" id="input-strategy" />
    <input type="text" name="pp" id="input-pp" />
    <input type="text" name="wait" id="input-wait" />
    </div></form>

    <h2>Syntax</h2>

    <table id="syntax" summary="syntax">
      <tr><td></td><th class="lambda">Lambda</th><th class="javascript">JavaScript</th><th class="javascript18"><a href="http://developer.mozilla.org/en/New_in_JavaScript_1.8">JavaScript 1.8</a></th></tr>
      <tr><th>variable</th><td><code>x</code></td><td><code>x</code></td><td><code>x</code></td></tr>
      <tr><th>abstraction</th><td><code>&lambda;x.<var>M</var></code> or <code>\x.<var>M</var></code></td><td><code>function(x){ return <var>M</var> }</code></td><td><code>function(x) <var>M</var></code></td></tr>
      <tr><th>application</th><td><code>((<var>M</var>) <var>N</var>)</code></td><td><code>(<var>M</var>)(<var>N</var>)</code></td><td><code>(<var>M</var>)(<var>N</var>)</code></td></tr>
      <tr><th>declaration</th><td>-</td><td><code>var a = <var>M</var>;</code></td><td><code>let a = <var>M</var>;</code></td></tr>
      <tr><th>syntactic sugar</th><td><dl>
      <dt><code>&lambda;x&hellip;yz.<var>M</var></code></dt>
      <dd>for <code>&lambda;x&hellip;y.&lambda;z.<var>M</var></code></dd>
      <dt><code>&lambda;x.<var>M</var> <var>N</var></code></dt>
      <dd>for <code>&lambda;x.(<var>M</var> <var>N</var>)</code></dd>
      <dt><code>(x <var>M</var>)</code></dt>
      <dd>for <code>((x) <var>M</var>)</code></dd>
      <dt><code>(<var>L</var> <var>M</var> <var>N</var>)</code></dt>
      <dd> for <code>((<var>L</var> <var>M</var>) N)</code></dd>
      </dl></td><td><dl>
      <dt><code>function(x,&hellip;,y,z){ return <var>M</var> }</code></dt>
      <dd>for <code>function(x,&hellip;,y){ return function(z){ return <var>M</var> } }</code></dd>
      <dt><code>x(<var>M</var>)</code></dt>
      <dd>for <code>(x)(<var>M</var>)</code></dd>
      <dt><code><var>L</var>(<var>M</var>)(<var>N</var>)</code></dt>
      <dd>for <code>(<var>L</var>(<var>M</var>))(<var>N</var>)</code></dd>
      </dl></td><td><dl>
      <dt><code>function(x,&hellip;,y,z) <var>M</var></code></dt>
      <dd>for <code>function(x,&hellip;,y) function(z) <var>M</var></code></dd>
      <dt><code>x(<var>M</var>)</code></dt>
      <dd>for <code>(x)(<var>M</var>)</code></dd>
      <dt><code><var>L</var>(<var>M</var>)(<var>N</var>)</code></dt>
      <dd>for <code>(<var>L</var>(<var>M</var>))(<var>N</var>)</code></dd>
      </dl></td></tr>
    </table>

    <h2>Example</h2>

    <div id="example">
      <dl><dt>code1</dt>
      <dd>
        <pre><code id="code1">(function(x){ return x })(a)</code></pre>
      </dd></dl>
      <p><a id="run-code1" href=".">run code1</a></p>

      <dl><dt>code2</dt>
      <dd>
        <pre><code id="code2">(function(x,y){ return x })(a)</code></pre>
      </dd></dl>
      <p><a id="run-code2" href=".">run code2</a></p>

      <dl><dt>code3</dt>
      <dd>
        <pre><code id="code3">var k = function(x,y){ return x };
k(a)(b)</code></pre>
      </dd></dl>
      <p><a id="run-code3" href=".">run code3</a></p>

      <dl><dt>code4</dt>
      <dd>
        <pre><code id="code4">var s = function(x,y,z){ return x(z)(y(z)) };
var k = function(x,y){ return x };
s(k)(k)</code></pre>
      </dd></dl>
      <p><a id="run-code4" href=".">run code4</a></p>

      <dl><dt>code5</dt>
      <dd>
        <pre><code id="code5">var s = function(x,y,z){ return x(z)(y(z)) };
var k = function(x,y){ return x };
s(a)(k)(c)</code></pre>
      </dd></dl>
      <p><a id="run-code5" href=".">run code5</a></p>

      <dl><dt>code6</dt>
      <dd>
        <pre><code id="code6">var o = function(x){ return x(x)(c) };
o(o)</code></pre>
      </dd></dl>
      <p><a id="run-code6" href=".">run code6</a></p>

      <dl><dt>code7 (leftmost outermost)</dt>
      <dd>
        <pre><code id="code7" class="leftmost-outermost">var k = function(x,y){ return x };
var o = function(x){ return x(x)(c) };
k(a)(o(o))</code></pre>
      </dd></dl>
      <p><a id="run-code7" href=".">run code7</a></p>

      <dl><dt>code8 (call by value)</dt>
      <dd>
        <pre><code id="code8" class="call-by-value">var k = function(x,y){ return x };
var o = function(x){ return x(x)(c) };
k(a)(o(o))</code></pre>
      </dd></dl>
      <p><a id="run-code8" href=".">run code8</a></p>

      <dl><dt>code9</dt>
      <dd>
        <pre><code id="code9">var _0 = function(s,z){ return z };
var _1 = function(s,z){ return s(z) };
var _2 = function(s,z){ return s(s(z)) };
var _3 = function(s,z){ return s(s(s(z))) };

var add = function(m,n,s,z){ return m(s)(n(s)(z)) };

add(_2)(_3)</code></pre>
      </dd></dl>
      <p><a id="run-code9" href=".">run code9</a></p>

      <dl><dt>code10</dt>
      <dd>
        <pre><code id="code10">var pair = function(P,Q,x){ return x(P)(Q) }; // cons
var fst = function(p){ return p(function(x,y){ return x }) }; // car
var snd = function(p){ return p(function(x,y){ return y }) }; // cdr

var p1 = pair(pair(a)(b))(pair(c)(d));
fst(snd(p1))</code></pre>
      </dd></dl>
      <p><a id="run-code10" href=".">run code10</a></p>

      <dl><dt>code11</dt>
      <dd>
        <pre><code id="code11">var t = function(x,y){ return x }; // true
var f = function(x,y){ return y }; // false
var cond = function(B,P,Q){ return B(P)(Q) }; // if-then-else
cond(t)(a)(b) // if true then a else b</code></pre>
      </dd></dl>
      <p><a id="run-code11" href=".">run code11</a></p>

      <dl><dt>code12</dt>
      <dd>
        <pre><code id="code12">var Y = function(f){ return (function(x){ return f((x)(x)) })(function(x){ return f((x)(x)) }) };

var _0 = function(s,z){ return z };
var _1 = function(s,z){ return s(z) };
var _2 = function(s,z){ return s(s(z)) };
var _3 = function(s,z){ return s(s(s(z))) };

var t = function(x,y){ return x }; // true
var f = function(x,y){ return y }; // false
var if0 = function(n){ return n(function(x){ return f })(t) }; // if n equals to _0

var mul = function(m,n,s,z){ return n(m(s))(z) };
var pred = function(n,s,z){ return n(function(f,g){ return g(f(s)) })(function(x){ return z })(function(x){ return x }) };

var fact = function(r,n){ return if0(n)(_1)(mul(n)(r(pred(n)))) };
Y(fact)(_3)</code></pre>
      </dd></dl>
      <p><a id="run-code12" href=".">run code12</a></p>
    </div>

    <h2>Source code</h2>

    <p>See: <a href="http://github.com/tarao/LambdaJS">http://github.com/tarao/LambdaJS</a></p>
  </div>
  <div id="footer">
    <address>ina at kuis.kyoto-u.ac.jp</address>
  </div>
</body>
</html>
